import java.awt.Color;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Rectangle;
import javafx.scene.shape.Circle;
import java.awt.geom.Ellipse2D;
import javax.swing.*;
import java.awt.*;
import java.awt.event.*;
import java.awt.geom.*;
import java.awt.Robot;
import java.awt.AWTException;

public class PacMan extends JPanel implements ActionListener, KeyListener {
   
   Timer t = new Timer(1, this);
   double x = 0, y = 0, velx = 0, vely = 0;
   
   public PacMan(){
      t.start();
      addKeyListener(this);
      setFocusable(true);
      setFocusTraversalKeysEnabled(false);
   }
   
   public void paintComponent(Graphics g){
   
      Graphics2D g2 = (Graphics2D) g;

      super.paintComponent(g);
      
      g2.setColor(Color.BLACK);
      g2.fill(new Rectangle(0, 0, 1000, 1000));
      
      g2.setColor(Color.white);
      g2.fill(new Ellipse2D.Double(100, 100, 15, 15));
      g2.fill(new Ellipse2D.Double(140, 95, 25, 25));
      
      g2.setColor(Color.yellow);
      g2.fill(new Ellipse2D.Double(x, y, 40, 40));
      
      g2.setColor(Color.blue);
      g2.draw(new Rectangle(400, 450, 200, 100));
      g2.draw(new Rectangle(390, 440, 220, 120));
      g2.drawLine(475, 450, 475, 440);
      g2.drawLine(525, 450, 525, 440);
      
      g2.setColor(Color.pink);
      g2.fill(new Rectangle(477, 442, 48, 6));
      
      g2.setColor(Color.black);
      g2.drawLine(475, 450, 525, 450);
      g2.drawLine(475, 440, 525, 440);
   }
   
   public void actionPerformed(ActionEvent e) {
      repaint();
      try{
         boolean wall = checkWall(x, y, velx, vely);
         if(wall) {
         
            x += velx;
            y += vely;
         
         }
      
      }
      catch (AWTException x) {
            x.printStackTrace();
      }
      
   }
   
   public void up() {
      vely = -10;
      velx = 0;
   } 
   
   public void down() {
      vely = 10;
      velx = 0;
   } 
   
   public void left() {
      vely = 0;
      velx = -10;
   }
   
   public void right() {
      vely = 0;
      velx = 10;
   }
   
   public void keyPressed(KeyEvent e) {
      int code = e.getKeyCode();
      if(code == KeyEvent.VK_UP){
         up();
      }
      if(code == KeyEvent.VK_DOWN){
         down();
      }
      if(code == KeyEvent.VK_RIGHT){
         right();
      }
      if(code == KeyEvent.VK_LEFT){
         left();
      }
   }
   
   public void keyReleased(KeyEvent event) {
   }
   public void keyTyped(KeyEvent event) {
   }
   
   public boolean checkWall(double x, double y, double velx, double vely) throws AWTException {
   
      Robot robot = new Robot();
      
      //Check space
      Color temp = robot.getPixelColor((int)(x + velx),(int)(y + vely));
      if(temp.equals(Color.blue)) return false;
      
      //Check space + 1
      temp = robot.getPixelColor((int)(x + velx + 1),(int)(y + vely + 1));
      if(temp.equals(Color.blue)) return false;
      
      //Check space + 2
      temp = robot.getPixelColor((int)(x + velx + 2),(int)(y + vely + 2));
      if(temp.equals(Color.blue)) return false;
      
      return true;
   
   }
}
